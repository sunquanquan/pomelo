var Package = require('pomelo-protocol').Package;
var crypto = require('crypto');

module.exports.handle = function (socket, reason) {
// websocket close code 1000 would emit when client close the connection
    if (typeof reason === 'string') {
        var res = {
            reason: reason
        };
        var res = new Buffer(JSON.stringify(res));
        var testFlag = 1;
        if(res !='' && res.length!=0 && testFlag == 1){
            //console.log(res);
            // console.log('加密1');
            var param =
            {
                alg: 'des-ede3',    //3des-ecb
                autoPad: true,
                key: '0123456789abcd0123456789',
                plaintext: res,
                iv: null
            };
            var key = new Buffer(param.key);
            var iv = new Buffer(param.iv ? param.iv : 0);
            var plaintext = param.plaintext;
            var alg = param.alg;
            var autoPad = param.autoPad;

            //encrypt
            var cipher = crypto.createCipheriv(alg, key, iv);
            cipher.setAutoPadding(autoPad);  //default true
            var ciph = cipher.update(plaintext);
            res = Buffer.concat([ciph, cipher.final()]);
            //console.log(msg);
        }
        socket.sendRaw(Package.encode(Package.TYPE_KICK, res));
    }
};
